{"version":3,"sources":["asset/Rolling.gif","components/Title/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","Styled","h2","_templateObject","Tren","react_default","a","createElement","Fade_default","duration","Jumlah","Title","_ref","chart","Title_Tren","Title_Jumlah","StackedAreaChart","React","lazy","Promise","all","e","then","bind","BarChart","Container","div","App_templateObject","Loading","width","height","style","display","justifyContent","alignItems","src","Rolling","alt","App","state","onClickButton","_this","setState","_this2","this","components_Title","className","data-toggle","marginLeft","onClick","type","name","id","autocomplete","checked","react","fallback","App_Loading","PureComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.709ef59f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rolling.9a6a6167.gif\";","import React from 'react';\nimport Styled from 'styled-components';\nimport Fade from 'react-reveal/Fade';\n\nconst Wrapper = Styled.h2`\n  text-align: center;\n  min-width: 1280px;\n  min-height: 81px;\n  font-size: 24px;\n  font-weight: 600;\n`;\n\nconst Title = ({chart}) => (\n  <Wrapper>\n    <div>\n      {chart === 1 ? \n        <Tren />:\n        <Jumlah />\n      }\n    </div>\n  </Wrapper>\n)\n\nconst Tren = () => (\n  <Fade duration={500}>\n    <div>\n      TREN AREA KEILMUAN UTAMA <br />\n      TUGAS AKHIR MAHASISWA INFORMATIKA ITB <br />\n      1998 - 2018\n    </div>\n  </Fade>\n);\n\nconst Jumlah = () => (\n  <Fade duration={500}>\n    <div>\n      PERBANDINGAN JUMLAH AREA KEILMUAN UTAMA <br />\n      TUGAS AKHIR MAHASISWA INFORMATIKA ITB <br/>\n      1998 - 2018\n    </div>\n  </Fade>\n);\n\nexport default Title;\n","import React, {Suspense} from 'react';\nimport Title from 'components/Title';\nimport Styled from 'styled-components';\nimport Rolling from 'asset/Rolling.gif';\nconst StackedAreaChart = React.lazy(() => import('components/StackedAreaChart'));\nconst BarChart = React.lazy(() => import('components/BarChart'));\n\nconst Container = Styled.div`\n  margin: 30px 10px;\n  label {\n    min-width: 73px;\n  }\n\n  .btn {\n    background: #deb639;\n    color: black;\n    cursor: pointer;\n  }\n\n  .btn.active {\n    background: #B07E1B;\n  }\n`;\n\nconst Loading = ({width, height}) => (\n  <div style={{width, height, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n    <img src={Rolling} alt=\"Loading...\" style={{width: '40px', height: '40px'}}/>\n  </div>\n);\n\nclass App extends React.PureComponent {\n  state = {\n    chart: 1\n  }\n\n  onClickButton = (chart) => {\n    this.setState({chart})\n  }\n\n  render() {\n    const {chart} = this.state;\n    return (\n      <Container>\n        <Title chart={chart}/>\n        <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\" style={{marginLeft: 40}}>\n          <label className=\"btn active\" onClick={() => this.onClickButton(1)}>\n            <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Tren\n          </label>\n          <label className=\"btn\" onClick={() => this.onClickButton(2)}>\n            <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Jumlah\n          </label>\n        </div>\n        <div style={{width: 1280, height: 455, display: 'flex', alignItems: 'flex-end', justifyContent: chart===2?'center':'left'}}>\n          {chart === 1 ? \n            <Suspense fallback={<Loading width={1280} height={480} />}>\n              <StackedAreaChart />\n            </Suspense>:\n            <Suspense fallback={<Loading width={800} height={420} />}>\n              <BarChart />\n            </Suspense>\n          }\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}